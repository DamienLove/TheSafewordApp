// Generated by view binder compiler. Do not edit!
package com.safeword.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.button.MaterialButtonToggleGroup;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.materialswitch.MaterialSwitch;
import com.safeword.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton buttonModeIncoming;

  @NonNull
  public final MaterialButton buttonModeOutgoing;

  @NonNull
  public final MaterialCardView cardContacts;

  @NonNull
  public final MaterialCardView cardListening;

  @NonNull
  public final MaterialCardView cardSafeWords;

  @NonNull
  public final MaterialCardView cardSettings;

  @NonNull
  public final MaterialCardView cardStatus;

  @NonNull
  public final ImageView iconContacts;

  @NonNull
  public final ImageView iconSettings;

  @NonNull
  public final MaterialButtonToggleGroup modeToggleGroup;

  @NonNull
  public final FrameLayout nativeAdContainer;

  @NonNull
  public final MaterialSwitch switchListening;

  @NonNull
  public final TextView textContacts;

  @NonNull
  public final TextView textContactsLabel;

  @NonNull
  public final TextView textContactsTitle;

  @NonNull
  public final TextView textListeningStatus;

  @NonNull
  public final TextView textListeningSubtitle;

  @NonNull
  public final TextView textPeerState;

  @NonNull
  public final TextView textPeerStateLabel;

  @NonNull
  public final TextView textSettingsTitle;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityMainBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton buttonModeIncoming, @NonNull MaterialButton buttonModeOutgoing,
      @NonNull MaterialCardView cardContacts, @NonNull MaterialCardView cardListening,
      @NonNull MaterialCardView cardSafeWords, @NonNull MaterialCardView cardSettings,
      @NonNull MaterialCardView cardStatus, @NonNull ImageView iconContacts,
      @NonNull ImageView iconSettings, @NonNull MaterialButtonToggleGroup modeToggleGroup,
      @NonNull FrameLayout nativeAdContainer, @NonNull MaterialSwitch switchListening,
      @NonNull TextView textContacts, @NonNull TextView textContactsLabel,
      @NonNull TextView textContactsTitle, @NonNull TextView textListeningStatus,
      @NonNull TextView textListeningSubtitle, @NonNull TextView textPeerState,
      @NonNull TextView textPeerStateLabel, @NonNull TextView textSettingsTitle,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.buttonModeIncoming = buttonModeIncoming;
    this.buttonModeOutgoing = buttonModeOutgoing;
    this.cardContacts = cardContacts;
    this.cardListening = cardListening;
    this.cardSafeWords = cardSafeWords;
    this.cardSettings = cardSettings;
    this.cardStatus = cardStatus;
    this.iconContacts = iconContacts;
    this.iconSettings = iconSettings;
    this.modeToggleGroup = modeToggleGroup;
    this.nativeAdContainer = nativeAdContainer;
    this.switchListening = switchListening;
    this.textContacts = textContacts;
    this.textContactsLabel = textContactsLabel;
    this.textContactsTitle = textContactsTitle;
    this.textListeningStatus = textListeningStatus;
    this.textListeningSubtitle = textListeningSubtitle;
    this.textPeerState = textPeerState;
    this.textPeerStateLabel = textPeerStateLabel;
    this.textSettingsTitle = textSettingsTitle;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_mode_incoming;
      MaterialButton buttonModeIncoming = ViewBindings.findChildViewById(rootView, id);
      if (buttonModeIncoming == null) {
        break missingId;
      }

      id = R.id.button_mode_outgoing;
      MaterialButton buttonModeOutgoing = ViewBindings.findChildViewById(rootView, id);
      if (buttonModeOutgoing == null) {
        break missingId;
      }

      id = R.id.card_contacts;
      MaterialCardView cardContacts = ViewBindings.findChildViewById(rootView, id);
      if (cardContacts == null) {
        break missingId;
      }

      id = R.id.card_listening;
      MaterialCardView cardListening = ViewBindings.findChildViewById(rootView, id);
      if (cardListening == null) {
        break missingId;
      }

      id = R.id.card_safe_words;
      MaterialCardView cardSafeWords = ViewBindings.findChildViewById(rootView, id);
      if (cardSafeWords == null) {
        break missingId;
      }

      id = R.id.card_settings;
      MaterialCardView cardSettings = ViewBindings.findChildViewById(rootView, id);
      if (cardSettings == null) {
        break missingId;
      }

      id = R.id.card_status;
      MaterialCardView cardStatus = ViewBindings.findChildViewById(rootView, id);
      if (cardStatus == null) {
        break missingId;
      }

      id = R.id.icon_contacts;
      ImageView iconContacts = ViewBindings.findChildViewById(rootView, id);
      if (iconContacts == null) {
        break missingId;
      }

      id = R.id.icon_settings;
      ImageView iconSettings = ViewBindings.findChildViewById(rootView, id);
      if (iconSettings == null) {
        break missingId;
      }

      id = R.id.mode_toggle_group;
      MaterialButtonToggleGroup modeToggleGroup = ViewBindings.findChildViewById(rootView, id);
      if (modeToggleGroup == null) {
        break missingId;
      }

      id = R.id.native_ad_container;
      FrameLayout nativeAdContainer = ViewBindings.findChildViewById(rootView, id);
      if (nativeAdContainer == null) {
        break missingId;
      }

      id = R.id.switch_listening;
      MaterialSwitch switchListening = ViewBindings.findChildViewById(rootView, id);
      if (switchListening == null) {
        break missingId;
      }

      id = R.id.text_contacts;
      TextView textContacts = ViewBindings.findChildViewById(rootView, id);
      if (textContacts == null) {
        break missingId;
      }

      id = R.id.text_contacts_label;
      TextView textContactsLabel = ViewBindings.findChildViewById(rootView, id);
      if (textContactsLabel == null) {
        break missingId;
      }

      id = R.id.text_contacts_title;
      TextView textContactsTitle = ViewBindings.findChildViewById(rootView, id);
      if (textContactsTitle == null) {
        break missingId;
      }

      id = R.id.text_listening_status;
      TextView textListeningStatus = ViewBindings.findChildViewById(rootView, id);
      if (textListeningStatus == null) {
        break missingId;
      }

      id = R.id.text_listening_subtitle;
      TextView textListeningSubtitle = ViewBindings.findChildViewById(rootView, id);
      if (textListeningSubtitle == null) {
        break missingId;
      }

      id = R.id.text_peer_state;
      TextView textPeerState = ViewBindings.findChildViewById(rootView, id);
      if (textPeerState == null) {
        break missingId;
      }

      id = R.id.text_peer_state_label;
      TextView textPeerStateLabel = ViewBindings.findChildViewById(rootView, id);
      if (textPeerStateLabel == null) {
        break missingId;
      }

      id = R.id.text_settings_title;
      TextView textSettingsTitle = ViewBindings.findChildViewById(rootView, id);
      if (textSettingsTitle == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityMainBinding((ScrollView) rootView, buttonModeIncoming, buttonModeOutgoing,
          cardContacts, cardListening, cardSafeWords, cardSettings, cardStatus, iconContacts,
          iconSettings, modeToggleGroup, nativeAdContainer, switchListening, textContacts,
          textContactsLabel, textContactsTitle, textListeningStatus, textListeningSubtitle,
          textPeerState, textPeerStateLabel, textSettingsTitle, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
