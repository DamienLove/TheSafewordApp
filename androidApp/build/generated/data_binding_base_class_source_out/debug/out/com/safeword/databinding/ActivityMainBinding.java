// Generated by view binder compiler. Do not edit!
package com.safeword.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.materialswitch.MaterialSwitch;
import com.safeword.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton buttonContacts;

  @NonNull
  public final MaterialButton buttonSafeWords;

  @NonNull
  public final MaterialButton buttonSettings;

  @NonNull
  public final MaterialSwitch switchListening;

  @NonNull
  public final MaterialSwitch switchMode;

  @NonNull
  public final TextView textContacts;

  @NonNull
  public final TextView textPeerState;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityMainBinding(@NonNull ScrollView rootView, @NonNull MaterialButton buttonContacts,
      @NonNull MaterialButton buttonSafeWords, @NonNull MaterialButton buttonSettings,
      @NonNull MaterialSwitch switchListening, @NonNull MaterialSwitch switchMode,
      @NonNull TextView textContacts, @NonNull TextView textPeerState,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.buttonContacts = buttonContacts;
    this.buttonSafeWords = buttonSafeWords;
    this.buttonSettings = buttonSettings;
    this.switchListening = switchListening;
    this.switchMode = switchMode;
    this.textContacts = textContacts;
    this.textPeerState = textPeerState;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_contacts;
      MaterialButton buttonContacts = ViewBindings.findChildViewById(rootView, id);
      if (buttonContacts == null) {
        break missingId;
      }

      id = R.id.button_safe_words;
      MaterialButton buttonSafeWords = ViewBindings.findChildViewById(rootView, id);
      if (buttonSafeWords == null) {
        break missingId;
      }

      id = R.id.button_settings;
      MaterialButton buttonSettings = ViewBindings.findChildViewById(rootView, id);
      if (buttonSettings == null) {
        break missingId;
      }

      id = R.id.switch_listening;
      MaterialSwitch switchListening = ViewBindings.findChildViewById(rootView, id);
      if (switchListening == null) {
        break missingId;
      }

      id = R.id.switch_mode;
      MaterialSwitch switchMode = ViewBindings.findChildViewById(rootView, id);
      if (switchMode == null) {
        break missingId;
      }

      id = R.id.text_contacts;
      TextView textContacts = ViewBindings.findChildViewById(rootView, id);
      if (textContacts == null) {
        break missingId;
      }

      id = R.id.text_peer_state;
      TextView textPeerState = ViewBindings.findChildViewById(rootView, id);
      if (textPeerState == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityMainBinding((ScrollView) rootView, buttonContacts, buttonSafeWords,
          buttonSettings, switchListening, switchMode, textContacts, textPeerState, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
