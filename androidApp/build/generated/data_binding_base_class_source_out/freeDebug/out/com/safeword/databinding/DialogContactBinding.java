// Generated by view binder compiler. Do not edit!
package com.safeword.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.safeword.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogContactBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final MaterialButton buttonImport;

  @NonNull
  public final TextInputEditText inputEmail;

  @NonNull
  public final TextInputLayout inputLayoutEmail;

  @NonNull
  public final TextInputLayout inputLayoutName;

  @NonNull
  public final TextInputLayout inputLayoutPhone;

  @NonNull
  public final TextInputEditText inputName;

  @NonNull
  public final TextInputEditText inputPhone;

  @NonNull
  public final TextView textTitle;

  private DialogContactBinding(@NonNull LinearLayout rootView, @NonNull MaterialButton buttonImport,
      @NonNull TextInputEditText inputEmail, @NonNull TextInputLayout inputLayoutEmail,
      @NonNull TextInputLayout inputLayoutName, @NonNull TextInputLayout inputLayoutPhone,
      @NonNull TextInputEditText inputName, @NonNull TextInputEditText inputPhone,
      @NonNull TextView textTitle) {
    this.rootView = rootView;
    this.buttonImport = buttonImport;
    this.inputEmail = inputEmail;
    this.inputLayoutEmail = inputLayoutEmail;
    this.inputLayoutName = inputLayoutName;
    this.inputLayoutPhone = inputLayoutPhone;
    this.inputName = inputName;
    this.inputPhone = inputPhone;
    this.textTitle = textTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogContactBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogContactBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_contact, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogContactBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_import;
      MaterialButton buttonImport = ViewBindings.findChildViewById(rootView, id);
      if (buttonImport == null) {
        break missingId;
      }

      id = R.id.input_email;
      TextInputEditText inputEmail = ViewBindings.findChildViewById(rootView, id);
      if (inputEmail == null) {
        break missingId;
      }

      id = R.id.input_layout_email;
      TextInputLayout inputLayoutEmail = ViewBindings.findChildViewById(rootView, id);
      if (inputLayoutEmail == null) {
        break missingId;
      }

      id = R.id.input_layout_name;
      TextInputLayout inputLayoutName = ViewBindings.findChildViewById(rootView, id);
      if (inputLayoutName == null) {
        break missingId;
      }

      id = R.id.input_layout_phone;
      TextInputLayout inputLayoutPhone = ViewBindings.findChildViewById(rootView, id);
      if (inputLayoutPhone == null) {
        break missingId;
      }

      id = R.id.input_name;
      TextInputEditText inputName = ViewBindings.findChildViewById(rootView, id);
      if (inputName == null) {
        break missingId;
      }

      id = R.id.input_phone;
      TextInputEditText inputPhone = ViewBindings.findChildViewById(rootView, id);
      if (inputPhone == null) {
        break missingId;
      }

      id = R.id.text_title;
      TextView textTitle = ViewBindings.findChildViewById(rootView, id);
      if (textTitle == null) {
        break missingId;
      }

      return new DialogContactBinding((LinearLayout) rootView, buttonImport, inputEmail,
          inputLayoutEmail, inputLayoutName, inputLayoutPhone, inputName, inputPhone, textTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
