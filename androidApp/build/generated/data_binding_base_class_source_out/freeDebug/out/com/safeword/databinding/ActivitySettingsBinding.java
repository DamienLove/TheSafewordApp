// Generated by view binder compiler. Do not edit!
package com.safeword.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.materialswitch.MaterialSwitch;
import com.google.android.material.slider.Slider;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.safeword.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton buttonRunTest;

  @NonNull
  public final MaterialButton buttonSave;

  @NonNull
  public final TextInputLayout inputLayoutSafeWordOne;

  @NonNull
  public final TextInputLayout inputLayoutSafeWordTwo;

  @NonNull
  public final TextInputEditText inputSafeWordOne;

  @NonNull
  public final TextInputEditText inputSafeWordTwo;

  @NonNull
  public final Slider sliderSensitivity;

  @NonNull
  public final MaterialSwitch switchIncludeLocation;

  @NonNull
  public final MaterialSwitch switchPlaySiren;

  @NonNull
  public final MaterialSwitch switchTestMode;

  @NonNull
  public final TextView textSensitivityValue;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivitySettingsBinding(@NonNull ScrollView rootView,
      @NonNull MaterialButton buttonRunTest, @NonNull MaterialButton buttonSave,
      @NonNull TextInputLayout inputLayoutSafeWordOne,
      @NonNull TextInputLayout inputLayoutSafeWordTwo, @NonNull TextInputEditText inputSafeWordOne,
      @NonNull TextInputEditText inputSafeWordTwo, @NonNull Slider sliderSensitivity,
      @NonNull MaterialSwitch switchIncludeLocation, @NonNull MaterialSwitch switchPlaySiren,
      @NonNull MaterialSwitch switchTestMode, @NonNull TextView textSensitivityValue,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.buttonRunTest = buttonRunTest;
    this.buttonSave = buttonSave;
    this.inputLayoutSafeWordOne = inputLayoutSafeWordOne;
    this.inputLayoutSafeWordTwo = inputLayoutSafeWordTwo;
    this.inputSafeWordOne = inputSafeWordOne;
    this.inputSafeWordTwo = inputSafeWordTwo;
    this.sliderSensitivity = sliderSensitivity;
    this.switchIncludeLocation = switchIncludeLocation;
    this.switchPlaySiren = switchPlaySiren;
    this.switchTestMode = switchTestMode;
    this.textSensitivityValue = textSensitivityValue;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_run_test;
      MaterialButton buttonRunTest = ViewBindings.findChildViewById(rootView, id);
      if (buttonRunTest == null) {
        break missingId;
      }

      id = R.id.button_save;
      MaterialButton buttonSave = ViewBindings.findChildViewById(rootView, id);
      if (buttonSave == null) {
        break missingId;
      }

      id = R.id.input_layout_safe_word_one;
      TextInputLayout inputLayoutSafeWordOne = ViewBindings.findChildViewById(rootView, id);
      if (inputLayoutSafeWordOne == null) {
        break missingId;
      }

      id = R.id.input_layout_safe_word_two;
      TextInputLayout inputLayoutSafeWordTwo = ViewBindings.findChildViewById(rootView, id);
      if (inputLayoutSafeWordTwo == null) {
        break missingId;
      }

      id = R.id.input_safe_word_one;
      TextInputEditText inputSafeWordOne = ViewBindings.findChildViewById(rootView, id);
      if (inputSafeWordOne == null) {
        break missingId;
      }

      id = R.id.input_safe_word_two;
      TextInputEditText inputSafeWordTwo = ViewBindings.findChildViewById(rootView, id);
      if (inputSafeWordTwo == null) {
        break missingId;
      }

      id = R.id.slider_sensitivity;
      Slider sliderSensitivity = ViewBindings.findChildViewById(rootView, id);
      if (sliderSensitivity == null) {
        break missingId;
      }

      id = R.id.switch_include_location;
      MaterialSwitch switchIncludeLocation = ViewBindings.findChildViewById(rootView, id);
      if (switchIncludeLocation == null) {
        break missingId;
      }

      id = R.id.switch_play_siren;
      MaterialSwitch switchPlaySiren = ViewBindings.findChildViewById(rootView, id);
      if (switchPlaySiren == null) {
        break missingId;
      }

      id = R.id.switch_test_mode;
      MaterialSwitch switchTestMode = ViewBindings.findChildViewById(rootView, id);
      if (switchTestMode == null) {
        break missingId;
      }

      id = R.id.text_sensitivity_value;
      TextView textSensitivityValue = ViewBindings.findChildViewById(rootView, id);
      if (textSensitivityValue == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((ScrollView) rootView, buttonRunTest, buttonSave,
          inputLayoutSafeWordOne, inputLayoutSafeWordTwo, inputSafeWordOne, inputSafeWordTwo,
          sliderSensitivity, switchIncludeLocation, switchPlaySiren, switchTestMode,
          textSensitivityValue, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
