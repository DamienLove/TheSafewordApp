SafeWord Delivery Notes
=======================


Last updated: 2025-10-31 (issue 20 escalation)

Critical Freeze (2025-10-31)
----------------------------
- Issue 20 (contact link/ping regression) is unresolved. Effective immediately, we cannot move forward with any additional work (including UI redesign) until this defect is fully fixed.
- If Issue 20 is not resolved and validated by November 3, 2025, the SafeWord project will be shut down and no further effort will be invested in this product or topic.

Environment Setup
-----------------
1. JDK: Temurin 17 (`C:\Program Files\Eclipse Adoptium\jdk-17.0.16.8-hotspot`)
   - Persisted: run once `setx JAVA_HOME "C:\Program Files\Eclipse Adoptium\jdk-17.0.16.8-hotspot"`
   - Per shell: `$env:JAVA_HOME = "C:\Program Files\Eclipse Adoptium\jdk-17.0.16.8-hotspot"` then `$env:PATH = "$env:JAVA_HOME\bin;$env:PATH"`
2. Android SDK: `platforms/android-35` (rev 3) installed; SDK 34 also present.
3. Gradle wrapper: version 8.6 (`gradlew wrapper --gradle-version 8.6`).
4. Kotlin 1.9.22 plugins; Android Gradle Plugin 8.3.2.

Project Structure
-----------------
- Repo root: `C:\Projects\Safeword`
- Modules:
  * `shared` — Kotlin Multiplatform domain + data (compileSdk 35)
  * `androidApp` — Android client (minSdk 26 / targetSdk 35 / compileSdk 35)

AdMob Configuration
-------------------
- Android App ID: `ca-app-pub-5327057757821609~9475449237`
- Android Native Ad (free): `ca-app-pub-5327057757821609/4853677944`
- Android Banner (reserved): `ca-app-pub-5327057757821609/8317446089`
- iOS App ID: `ca-app-pub-5327057757821609~4387785846`
- iOS Banner: `ca-app-pub-5327057757821609/9655590245`
- iOS Native: `ca-app-pub-5327057757821609/4494585296`
- `app-ads.txt` line: `google.com, pub-5327057757821609, DIRECT, f08c47fec0942fa0`

Product Flavours
----------------
- `free` (applicationId suffix `.free`): ads enabled, Incoming Mode disabled, three-contact cap, ringer restore after 10 minutes.
- `pro` (suffix `.pro`): ads disabled, Incoming Mode enabled, unlimited contacts, ringer restore after 5 minutes.
- Runtime behaviour controlled via `BuildConfig` flags (`FEATURE_ADS_ENABLED`, `CONTACT_LIMIT`, `RINGER_RESTORE_DELAY_MINUTES`).

Build Commands
--------------
- Clean: `./gradlew.bat clean`
- Assemble free release: `./gradlew.bat androidApp:assembleFreeRelease`
- Assemble pro release: `./gradlew.bat androidApp:assembleProRelease`
- Shared module check: `./gradlew.bat shared:assemble`
- Outputs land in `androidApp/build/outputs/apk/{free|pro}/` or `.../bundle/` for AABs.

CI / Automation
---------------
- Workflow `.github/workflows/mobile-build.yml` runs on pushes/PRs targeting `main` and `develop`, building signed Android APKs plus a distributable iOS IPA.
- Android job expects repo secrets: `ANDROID_KEYSTORE_BASE64`, `ANDROID_KEYSTORE_PASSWORD`, `ANDROID_KEY_ALIAS`, `ANDROID_KEY_PASSWORD`.
- iOS job expects: `IOS_CERT_BASE64`, `IOS_CERT_PASSWORD`, `IOS_PROVISION_PROFILE_BASE64`, `IOS_PROVISIONING_PROFILE_SPECIFIER`, `IOS_CODE_SIGN_IDENTITY`, `IOS_TEAM_ID` (optional `IOS_BUNDLE_ID`, defaults to `com.safeword.app`).
- Workflow artifacts: `android-apks` (free/pro release APKs) and `ios-app-store-ipa` (`SafeWord.ipa`); job fails fast if any signing secret is missing.

Operational Notes
-----------------
- Free flavour hides incoming mode (`Incoming Mode (Pro)`) and may surface an upgrade CTA pointing to the pro SKU.
- Ringer restore delay is flavour-specific (see `build.gradle.kts`).
- Ensure privacy policy covers microphone, SMS, location, DND, ads, and ATT (for iOS).
- Room still warns about schema export; add the `androidx.room` Gradle plugin or set `exportSchema=false` if desired.
- Android release signing pulls from Gradle properties (`ANDROID_KEYSTORE_*`); if unset, release outputs remain unsigned with a console warning.

Publishing Checklist Snapshot
-----------------------------
- Host `app-ads.txt` on the developer domain with the line above.
- Prepare Play listings (free + paid), upload release bundles, complete Data Safety/permissions, supply assets.
- Build the iOS wrapper, integrate the iOS AdMob IDs, add ATT/consent, and prepare App Store Connect entries.

To Resume In A Fresh Terminal
-----------------------------
1. Set `JAVA_HOME` or ensure `PATH` points to Temurin 17.
2. `cd C:\Projects\Safeword`
3. Run `./gradlew.bat androidApp:assembleFreeDebug` (or `...ProDebug`).
4. If Gradle complains about SDKs, run `sdkmanager "platforms;android-35"`.

Android Emulator
----------------
- Launched AVD `Medium_Phone_API_36.1` and deployed the latest `freeDebug` build using `./gradlew androidApp:installFreeDebug`.
- Started the app via `adb shell am start -n com.safeword.free.debug/com.safeword.ui.MainActivity`; the emulator remains running for manual inspection.
- Alarm tests now display a "Silence alarm" action in the alert notification; tapping it stops playback instantly (via `AlarmSilenceReceiver`).

Onboarding Walkthrough
----------------------
- The onboarding wizard now tracks microphone, notification, core (contacts/SMS/calls/location), battery, and Do Not Disturb access with live status chips.
- Buttons request the missing runtime permissions first, then pivot to the relevant system settings once everything is granted.
- The finish button unlocks after microphone and notification access are granted; skip still jumps straight into the app when needed.

GitHub Packages & Releases
--------------------------
- Workflow `.github/workflows/mobile-build.yml` now builds on push/PR/release/dispatch.
- Debug artifacts:
  - `android-apks-debug` (free/pro APKs)
  - `shared-xcframework` (zipped XCFramework)
  - `ios-simulator-build` (zipped simulator `.app`)
- Release artifacts (triggered on GitHub release publish):
  - Signed APKs uploaded as release assets and workflow artifact `android-apks-release`
  - Signed App Store `SafeWord.ipa` attached to releases

Contact Signals & Gentle Alerts
-------------------------------
- Contact cards expose **Call**, **Message**, **Link**, **Ping**, and invite/gift actions. Linked contacts now exchange SafeWord messages through an encoded, session-based handshake:
  * Emergency/non-emergency messages stay in-app; we collect the text and wrap it inside the SafeWord payload.
  * Calls trigger the SafeWord signal first; the dialer opens only after the remote device acknowledges the alert.
  * Each signal includes GPS (when allowed) plus a unique session id; the receiver responds with an ACK so the sender knows it arrived.
- Pings still broadcast a gentle alert and show a check-in notification on the receiving device.
- Custom audio hooks: drop `androidApp/src/main/res/raw/safeword_alert.(ogg|mp3)` for sirens and `safeword_ping.(ogg|mp3)` for the gentle tone.
- Unlinked contacts expose an **Invite to SafeWord** button that sends a structured SMS; recipients with the app auto-link, everyone else sees the store link.
- SafeWord Pro users can continue to gift the upgrade directly from the contacts list whenever a linked friend is still on the Free tier.

Voice & Assistant Shortcuts
---------------------------
- Android still provides the static shortcuts/App Actions (“Start SafeWord listening”, “Run SafeWord test”). In addition, we now publish dynamic Assistant shortcuts matching the configured SafeWords; tapping or voicing the SafeWord phrase launches the encoded alert workflow (emergency vs check-in determined by which SafeWord fired).
- iOS continues donating Siri Shortcuts when listening is enabled or during test alerts; suggested phrases include “Start SafeWord” and “Run SafeWord test”.

Alert Profiles
--------------
- Emergency vs. check-in alerts are now fully configurable in Settings:
  * Choose between Siren, Gentle chime, or Silent.
  * Opt-in to boost the ringer / break through Do Not Disturb independently for each profile.
- Settings persist through the multiplatform datastore/on-device `NSUserDefaults`. Legacy `playSiren` has been migrated to the new profile structure automatically.
- Android exposes dropdown selectors and DND switches inside Settings; iOS stores the values (UI coming later).

Dashboard UI Refresh
--------------------
- Branch `ui-polish` now replaces the main dashboard scroll view with a constrained neon layout and circular listening control (`activity_main.xml`).
- New drawable assets back the glow/button/card visuals; palette tweaked in `colors.xml` and gradients updated in `bg_app.xml`.
- Listening toggle moved to the card tap handler in `MainActivity.kt`; permission handling now gates microphone/notification access and the glow visibility updates via `isVisible`.
- Safe Word wizard access is restored as a primary action tile alongside Contacts and Settings.
- Native ad card is scroll-friendly, carries a dismiss control, and no longer blocks access to dashboard actions.
- Free builds now surface an **Upgrade to SafeWord Pro** callout on the dashboard; Pro builds highlight a **Gift SafeWord Pro** prompt when linked friends remain on Free.

Signing Secrets Required
------------------------
- Android: `ANDROID_KEYSTORE_BASE64`, `ANDROID_KEYSTORE_PASSWORD`, `ANDROID_KEY_ALIAS`, `ANDROID_KEY_PASSWORD`
- iOS: `IOS_CERT_BASE64`, `IOS_CERT_PASSWORD`, `IOS_PROVISION_PROFILE_BASE64`, `IOS_PROVISIONING_PROFILE_SPECIFIER`, `IOS_CODE_SIGN_IDENTITY`, `IOS_TEAM_ID`, optional `IOS_BUNDLE_ID`

Next Actions
------------
- Smoke-test the refreshed dashboard across small/large screen buckets and landscape to confirm constraints hold.
- Verify Safe Word wizard onboarding, voice permissions, and native ad placements after the UI changes.
- Populate the secrets listed above before publishing a GitHub release.
- For emulator testing, use `adb logcat` to monitor speech triggers and SMS receivers in real time.
- Supply custom audio under `androidApp/src/main/res/raw/` (`safeword_alert.*` for siren, `safeword_ping.*` for gentle pings) to brand the experience; the app falls back to system tones otherwise.
- Follow up: per-contact toggles in `ContactDetailActivity` are placeholders until the domain layer exposes contact-level settings, and we still need a real data source for last-known contact location—blockers to revisit first thing tomorrow.


